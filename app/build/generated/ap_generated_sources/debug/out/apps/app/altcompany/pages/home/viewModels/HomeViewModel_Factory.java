// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.home.viewModels;

import apps.app.altcompany.repository.OrdersRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<OrdersRepository> ordersRepositoryProvider;

  private final Provider<OrdersRepository> ordersRepositoryProvider2;

  public HomeViewModel_Factory(Provider<OrdersRepository> ordersRepositoryProvider,
      Provider<OrdersRepository> ordersRepositoryProvider2) {
    this.ordersRepositoryProvider = ordersRepositoryProvider;
    this.ordersRepositoryProvider2 = ordersRepositoryProvider2;
  }

  @Override
  public HomeViewModel get() {
    HomeViewModel instance = newInstance(ordersRepositoryProvider.get());
    HomeViewModel_MembersInjector.injectOrdersRepository(instance, ordersRepositoryProvider2.get());
    return instance;
  }

  public static HomeViewModel_Factory create(Provider<OrdersRepository> ordersRepositoryProvider,
      Provider<OrdersRepository> ordersRepositoryProvider2) {
    return new HomeViewModel_Factory(ordersRepositoryProvider, ordersRepositoryProvider2);
  }

  public static HomeViewModel newInstance(OrdersRepository ordersRepository) {
    return new HomeViewModel(ordersRepository);
  }
}
