// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.myWorks.viewModels;

import apps.app.altcompany.repository.AuthRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyWorksViewModel_MembersInjector implements MembersInjector<MyWorksViewModel> {
  private final Provider<AuthRepository> ordersRepositoryProvider;

  public MyWorksViewModel_MembersInjector(Provider<AuthRepository> ordersRepositoryProvider) {
    this.ordersRepositoryProvider = ordersRepositoryProvider;
  }

  public static MembersInjector<MyWorksViewModel> create(
      Provider<AuthRepository> ordersRepositoryProvider) {
    return new MyWorksViewModel_MembersInjector(ordersRepositoryProvider);
  }

  @Override
  public void injectMembers(MyWorksViewModel instance) {
    injectOrdersRepository(instance, ordersRepositoryProvider.get());
  }

  @InjectedFieldSignature("apps.app.altcompany.pages.myWorks.viewModels.MyWorksViewModel.ordersRepository")
  public static void injectOrdersRepository(MyWorksViewModel instance,
      AuthRepository ordersRepository) {
    instance.ordersRepository = ordersRepository;
  }
}
