// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.notifications;

import apps.app.altcompany.pages.notifications.viewModels.NotificationsViewModels;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationsFragment_MembersInjector implements MembersInjector<NotificationsFragment> {
  private final Provider<NotificationsViewModels> notificationsViewModelsProvider;

  public NotificationsFragment_MembersInjector(
      Provider<NotificationsViewModels> notificationsViewModelsProvider) {
    this.notificationsViewModelsProvider = notificationsViewModelsProvider;
  }

  public static MembersInjector<NotificationsFragment> create(
      Provider<NotificationsViewModels> notificationsViewModelsProvider) {
    return new NotificationsFragment_MembersInjector(notificationsViewModelsProvider);
  }

  @Override
  public void injectMembers(NotificationsFragment instance) {
    injectNotificationsViewModels(instance, notificationsViewModelsProvider.get());
  }

  @InjectedFieldSignature("apps.app.altcompany.pages.notifications.NotificationsFragment.notificationsViewModels")
  public static void injectNotificationsViewModels(NotificationsFragment instance,
      NotificationsViewModels notificationsViewModels) {
    instance.notificationsViewModels = notificationsViewModels;
  }
}
