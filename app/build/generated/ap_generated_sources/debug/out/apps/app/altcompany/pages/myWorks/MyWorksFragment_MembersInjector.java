// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.myWorks;

import apps.app.altcompany.pages.myWorks.viewModels.MyWorksViewModel;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyWorksFragment_MembersInjector implements MembersInjector<MyWorksFragment> {
  private final Provider<MyWorksViewModel> viewModelProvider;

  public MyWorksFragment_MembersInjector(Provider<MyWorksViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<MyWorksFragment> create(
      Provider<MyWorksViewModel> viewModelProvider) {
    return new MyWorksFragment_MembersInjector(viewModelProvider);
  }

  @Override
  public void injectMembers(MyWorksFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("apps.app.altcompany.pages.myWorks.MyWorksFragment.viewModel")
  public static void injectViewModel(MyWorksFragment instance, MyWorksViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
