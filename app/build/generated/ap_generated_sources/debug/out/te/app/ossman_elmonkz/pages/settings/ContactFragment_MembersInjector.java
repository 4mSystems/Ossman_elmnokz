// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.settings;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import te.app.ossman_elmonkz.pages.settings.viewModels.SettingsViewModel;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContactFragment_MembersInjector implements MembersInjector<ContactFragment> {
  private final Provider<SettingsViewModel> viewModelProvider;

  public ContactFragment_MembersInjector(Provider<SettingsViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<ContactFragment> create(
      Provider<SettingsViewModel> viewModelProvider) {
    return new ContactFragment_MembersInjector(viewModelProvider);
  }

  @Override
  public void injectMembers(ContactFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("te.app.ossman_elmonkz.pages.settings.ContactFragment.viewModel")
  public static void injectViewModel(ContactFragment instance, SettingsViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
