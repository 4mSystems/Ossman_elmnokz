// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.gallery.viewModels;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.ossman_elmonkz.repository.ProductRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GalleryViewModel_Factory implements Factory<GalleryViewModel> {
  private final Provider<ProductRepository> productRepositoryProvider;

  private final Provider<ProductRepository> productRepositoryProvider2;

  public GalleryViewModel_Factory(Provider<ProductRepository> productRepositoryProvider,
      Provider<ProductRepository> productRepositoryProvider2) {
    this.productRepositoryProvider = productRepositoryProvider;
    this.productRepositoryProvider2 = productRepositoryProvider2;
  }

  @Override
  public GalleryViewModel get() {
    GalleryViewModel instance = newInstance(productRepositoryProvider.get());
    GalleryViewModel_MembersInjector.injectProductRepository(instance, productRepositoryProvider2.get());
    return instance;
  }

  public static GalleryViewModel_Factory create(
      Provider<ProductRepository> productRepositoryProvider,
      Provider<ProductRepository> productRepositoryProvider2) {
    return new GalleryViewModel_Factory(productRepositoryProvider, productRepositoryProvider2);
  }

  public static GalleryViewModel newInstance(ProductRepository productRepository) {
    return new GalleryViewModel(productRepository);
  }
}
