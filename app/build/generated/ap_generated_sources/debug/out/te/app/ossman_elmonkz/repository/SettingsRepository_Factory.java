// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.repository;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.ossman_elmonkz.connection.ConnectionHelper;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsRepository_Factory implements Factory<SettingsRepository> {
  private final Provider<ConnectionHelper> connectionHelperProvider;

  private final Provider<ConnectionHelper> connectionHelperProvider2;

  public SettingsRepository_Factory(Provider<ConnectionHelper> connectionHelperProvider,
      Provider<ConnectionHelper> connectionHelperProvider2) {
    this.connectionHelperProvider = connectionHelperProvider;
    this.connectionHelperProvider2 = connectionHelperProvider2;
  }

  @Override
  public SettingsRepository get() {
    SettingsRepository instance = newInstance(connectionHelperProvider.get());
    SettingsRepository_MembersInjector.injectConnectionHelper(instance, connectionHelperProvider2.get());
    return instance;
  }

  public static SettingsRepository_Factory create(
      Provider<ConnectionHelper> connectionHelperProvider,
      Provider<ConnectionHelper> connectionHelperProvider2) {
    return new SettingsRepository_Factory(connectionHelperProvider, connectionHelperProvider2);
  }

  public static SettingsRepository newInstance(ConnectionHelper connectionHelper) {
    return new SettingsRepository(connectionHelper);
  }
}
