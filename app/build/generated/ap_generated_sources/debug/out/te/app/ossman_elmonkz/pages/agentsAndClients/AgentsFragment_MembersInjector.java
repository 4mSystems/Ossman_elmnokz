// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.agentsAndClients;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import te.app.ossman_elmonkz.pages.agentsAndClients.viewModels.AgentsClientsViewModel;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AgentsFragment_MembersInjector implements MembersInjector<AgentsFragment> {
  private final Provider<AgentsClientsViewModel> viewModelProvider;

  public AgentsFragment_MembersInjector(Provider<AgentsClientsViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<AgentsFragment> create(
      Provider<AgentsClientsViewModel> viewModelProvider) {
    return new AgentsFragment_MembersInjector(viewModelProvider);
  }

  @Override
  public void injectMembers(AgentsFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("te.app.ossman_elmonkz.pages.agentsAndClients.AgentsFragment.viewModel")
  public static void injectViewModel(AgentsFragment instance, AgentsClientsViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
