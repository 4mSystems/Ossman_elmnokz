// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.cart.viewModels;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.ossman_elmonkz.repository.BuyingRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateOrderViewModel_Factory implements Factory<CreateOrderViewModel> {
  private final Provider<BuyingRepository> productRepositoryProvider;

  private final Provider<BuyingRepository> productRepositoryProvider2;

  public CreateOrderViewModel_Factory(Provider<BuyingRepository> productRepositoryProvider,
      Provider<BuyingRepository> productRepositoryProvider2) {
    this.productRepositoryProvider = productRepositoryProvider;
    this.productRepositoryProvider2 = productRepositoryProvider2;
  }

  @Override
  public CreateOrderViewModel get() {
    CreateOrderViewModel instance = newInstance(productRepositoryProvider.get());
    CreateOrderViewModel_MembersInjector.injectProductRepository(instance, productRepositoryProvider2.get());
    return instance;
  }

  public static CreateOrderViewModel_Factory create(
      Provider<BuyingRepository> productRepositoryProvider,
      Provider<BuyingRepository> productRepositoryProvider2) {
    return new CreateOrderViewModel_Factory(productRepositoryProvider, productRepositoryProvider2);
  }

  public static CreateOrderViewModel newInstance(BuyingRepository productRepository) {
    return new CreateOrderViewModel(productRepository);
  }
}
