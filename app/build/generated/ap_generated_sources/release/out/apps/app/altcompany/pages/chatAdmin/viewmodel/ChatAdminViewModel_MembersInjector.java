// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.chatAdmin.viewmodel;

import apps.app.altcompany.repository.ChatRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatAdminViewModel_MembersInjector implements MembersInjector<ChatAdminViewModel> {
  private final Provider<ChatRepository> repositoryProvider;

  public ChatAdminViewModel_MembersInjector(Provider<ChatRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<ChatAdminViewModel> create(
      Provider<ChatRepository> repositoryProvider) {
    return new ChatAdminViewModel_MembersInjector(repositoryProvider);
  }

  @Override
  public void injectMembers(ChatAdminViewModel instance) {
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("apps.app.altcompany.pages.chatAdmin.viewmodel.ChatAdminViewModel.repository")
  public static void injectRepository(ChatAdminViewModel instance, ChatRepository repository) {
    instance.repository = repository;
  }
}
