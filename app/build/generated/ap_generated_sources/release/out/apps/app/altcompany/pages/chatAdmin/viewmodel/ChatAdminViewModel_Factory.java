// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.chatAdmin.viewmodel;

import apps.app.altcompany.repository.ChatRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatAdminViewModel_Factory implements Factory<ChatAdminViewModel> {
  private final Provider<ChatRepository> repositoryProvider;

  private final Provider<ChatRepository> repositoryProvider2;

  public ChatAdminViewModel_Factory(Provider<ChatRepository> repositoryProvider,
      Provider<ChatRepository> repositoryProvider2) {
    this.repositoryProvider = repositoryProvider;
    this.repositoryProvider2 = repositoryProvider2;
  }

  @Override
  public ChatAdminViewModel get() {
    ChatAdminViewModel instance = newInstance(repositoryProvider.get());
    ChatAdminViewModel_MembersInjector.injectRepository(instance, repositoryProvider2.get());
    return instance;
  }

  public static ChatAdminViewModel_Factory create(Provider<ChatRepository> repositoryProvider,
      Provider<ChatRepository> repositoryProvider2) {
    return new ChatAdminViewModel_Factory(repositoryProvider, repositoryProvider2);
  }

  public static ChatAdminViewModel newInstance(ChatRepository repository) {
    return new ChatAdminViewModel(repository);
  }
}
