// Generated by Dagger (https://dagger.dev).
package apps.app.altcompany.pages.auth.confirmCode;

import apps.app.altcompany.repository.AuthRepository;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CodeViewModel_MembersInjector implements MembersInjector<CodeViewModel> {
  private final Provider<AuthRepository> repositoryProvider;

  public CodeViewModel_MembersInjector(Provider<AuthRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<CodeViewModel> create(Provider<AuthRepository> repositoryProvider) {
    return new CodeViewModel_MembersInjector(repositoryProvider);
  }

  @Override
  public void injectMembers(CodeViewModel instance) {
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("apps.app.altcompany.pages.auth.confirmCode.CodeViewModel.repository")
  public static void injectRepository(CodeViewModel instance, AuthRepository repository) {
    instance.repository = repository;
  }
}
