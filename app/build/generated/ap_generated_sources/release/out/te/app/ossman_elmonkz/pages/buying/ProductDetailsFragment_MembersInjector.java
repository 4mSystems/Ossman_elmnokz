// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.buying;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import te.app.ossman_elmonkz.pages.buying.viewModels.ProductDetailsViewModel;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductDetailsFragment_MembersInjector implements MembersInjector<ProductDetailsFragment> {
  private final Provider<ProductDetailsViewModel> viewModelProvider;

  public ProductDetailsFragment_MembersInjector(
      Provider<ProductDetailsViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<ProductDetailsFragment> create(
      Provider<ProductDetailsViewModel> viewModelProvider) {
    return new ProductDetailsFragment_MembersInjector(viewModelProvider);
  }

  @Override
  public void injectMembers(ProductDetailsFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("te.app.ossman_elmonkz.pages.buying.ProductDetailsFragment.viewModel")
  public static void injectViewModel(ProductDetailsFragment instance,
      ProductDetailsViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
