// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.agentsAndClients.viewModels;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.ossman_elmonkz.repository.SettingsRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AgentsClientsViewModel_Factory implements Factory<AgentsClientsViewModel> {
  private final Provider<SettingsRepository> repositoryProvider;

  private final Provider<SettingsRepository> repositoryProvider2;

  public AgentsClientsViewModel_Factory(Provider<SettingsRepository> repositoryProvider,
      Provider<SettingsRepository> repositoryProvider2) {
    this.repositoryProvider = repositoryProvider;
    this.repositoryProvider2 = repositoryProvider2;
  }

  @Override
  public AgentsClientsViewModel get() {
    AgentsClientsViewModel instance = newInstance(repositoryProvider.get());
    AgentsClientsViewModel_MembersInjector.injectRepository(instance, repositoryProvider2.get());
    return instance;
  }

  public static AgentsClientsViewModel_Factory create(
      Provider<SettingsRepository> repositoryProvider,
      Provider<SettingsRepository> repositoryProvider2) {
    return new AgentsClientsViewModel_Factory(repositoryProvider, repositoryProvider2);
  }

  public static AgentsClientsViewModel newInstance(SettingsRepository repository) {
    return new AgentsClientsViewModel(repository);
  }
}
