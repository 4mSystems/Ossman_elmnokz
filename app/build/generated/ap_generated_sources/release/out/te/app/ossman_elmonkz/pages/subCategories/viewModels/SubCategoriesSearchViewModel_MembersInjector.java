// Generated by Dagger (https://dagger.dev).
package te.app.ossman_elmonkz.pages.subCategories.viewModels;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import te.app.ossman_elmonkz.repository.HomeRepository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SubCategoriesSearchViewModel_MembersInjector implements MembersInjector<SubCategoriesSearchViewModel> {
  private final Provider<HomeRepository> homeRepositoryProvider;

  public SubCategoriesSearchViewModel_MembersInjector(
      Provider<HomeRepository> homeRepositoryProvider) {
    this.homeRepositoryProvider = homeRepositoryProvider;
  }

  public static MembersInjector<SubCategoriesSearchViewModel> create(
      Provider<HomeRepository> homeRepositoryProvider) {
    return new SubCategoriesSearchViewModel_MembersInjector(homeRepositoryProvider);
  }

  @Override
  public void injectMembers(SubCategoriesSearchViewModel instance) {
    injectHomeRepository(instance, homeRepositoryProvider.get());
  }

  @InjectedFieldSignature("te.app.ossman_elmonkz.pages.subCategories.viewModels.SubCategoriesSearchViewModel.homeRepository")
  public static void injectHomeRepository(SubCategoriesSearchViewModel instance,
      HomeRepository homeRepository) {
    instance.homeRepository = homeRepository;
  }
}
