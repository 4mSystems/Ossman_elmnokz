// Generated by data binding compiler. Do not edit!
package te.app.ossman_elmonkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.ossman_elmonkz.R;
import te.app.ossman_elmonkz.customViews.views.CustomTextViewMedium;
import te.app.ossman_elmonkz.pages.agentsAndClients.viewModels.ItemClientViewModel;

public abstract class ItemClientsBinding extends ViewDataBinding {
  @NonNull
  public final CustomTextViewMedium address;

  @NonNull
  public final Barrier br4;

  @NonNull
  public final Barrier br5;

  @NonNull
  public final Barrier br6;

  @NonNull
  public final CustomTextViewMedium name;

  @NonNull
  public final CustomTextViewMedium phone;

  @NonNull
  public final CircleImageView productImage;

  @NonNull
  public final CustomTextViewMedium productName;

  @NonNull
  public final CustomTextViewMedium shopName;

  @Bindable
  protected ItemClientViewModel mItemViewModel;

  protected ItemClientsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CustomTextViewMedium address, Barrier br4, Barrier br5, Barrier br6,
      CustomTextViewMedium name, CustomTextViewMedium phone, CircleImageView productImage,
      CustomTextViewMedium productName, CustomTextViewMedium shopName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.address = address;
    this.br4 = br4;
    this.br5 = br5;
    this.br6 = br6;
    this.name = name;
    this.phone = phone;
    this.productImage = productImage;
    this.productName = productName;
    this.shopName = shopName;
  }

  public abstract void setItemViewModel(@Nullable ItemClientViewModel itemViewModel);

  @Nullable
  public ItemClientViewModel getItemViewModel() {
    return mItemViewModel;
  }

  @NonNull
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_clients, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemClientsBinding>inflateInternal(inflater, R.layout.item_clients, root, attachToRoot, component);
  }

  @NonNull
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_clients, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemClientsBinding>inflateInternal(inflater, R.layout.item_clients, null, false, component);
  }

  public static ItemClientsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemClientsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemClientsBinding)bind(component, view, R.layout.item_clients);
  }
}
