// Generated by data binding compiler. Do not edit!
package te.app.ossman_elmonkz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.ossman_elmonkz.R;
import te.app.ossman_elmonkz.customViews.views.CustomTextViewMedium;
import te.app.ossman_elmonkz.customViews.views.IncrementalView;
import te.app.ossman_elmonkz.pages.buying.viewModels.BuyingViewModel;

public abstract class FragmentBuyingBinding extends ViewDataBinding {
  @NonNull
  public final Barrier br;

  @NonNull
  public final TextInputLayout brandName;

  @NonNull
  public final CustomTextViewMedium customTextViewMedium;

  @NonNull
  public final TextInputLayout departmentName;

  @NonNull
  public final MaterialButton edit;

  @NonNull
  public final IncrementalView incrementalViewFloorNumber;

  @NonNull
  public final TextInputLayout modelName;

  @NonNull
  public final TextInputLayout productName;

  @Bindable
  protected BuyingViewModel mViewmodel;

  protected FragmentBuyingBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Barrier br, TextInputLayout brandName, CustomTextViewMedium customTextViewMedium,
      TextInputLayout departmentName, MaterialButton edit,
      IncrementalView incrementalViewFloorNumber, TextInputLayout modelName,
      TextInputLayout productName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.br = br;
    this.brandName = brandName;
    this.customTextViewMedium = customTextViewMedium;
    this.departmentName = departmentName;
    this.edit = edit;
    this.incrementalViewFloorNumber = incrementalViewFloorNumber;
    this.modelName = modelName;
    this.productName = productName;
  }

  public abstract void setViewmodel(@Nullable BuyingViewModel viewmodel);

  @Nullable
  public BuyingViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static FragmentBuyingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_buying, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentBuyingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentBuyingBinding>inflateInternal(inflater, R.layout.fragment_buying, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentBuyingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_buying, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentBuyingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentBuyingBinding>inflateInternal(inflater, R.layout.fragment_buying, null, false, component);
  }

  public static FragmentBuyingBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentBuyingBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentBuyingBinding)bind(component, view, R.layout.fragment_buying);
  }
}
