// Generated by data binding compiler. Do not edit!
package apps.app.altcompany.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import apps.app.altcompany.R;
import apps.app.altcompany.pages.chatAdmin.viewmodel.ChatAdminViewModel;
import com.google.android.material.textfield.TextInputEditText;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentChatAdminBinding extends ViewDataBinding {
  @NonNull
  public final TextInputEditText edMessage;

  @NonNull
  public final CardView message;

  @NonNull
  public final RecyclerView rcChat;

  @NonNull
  public final CircleImageView sendChat;

  @Bindable
  protected ChatAdminViewModel mViewmodel;

  protected FragmentChatAdminBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextInputEditText edMessage, CardView message, RecyclerView rcChat,
      CircleImageView sendChat) {
    super(_bindingComponent, _root, _localFieldCount);
    this.edMessage = edMessage;
    this.message = message;
    this.rcChat = rcChat;
    this.sendChat = sendChat;
  }

  public abstract void setViewmodel(@Nullable ChatAdminViewModel viewmodel);

  @Nullable
  public ChatAdminViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static FragmentChatAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_chat_admin, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentChatAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentChatAdminBinding>inflateInternal(inflater, R.layout.fragment_chat_admin, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentChatAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_chat_admin, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentChatAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentChatAdminBinding>inflateInternal(inflater, R.layout.fragment_chat_admin, null, false, component);
  }

  public static FragmentChatAdminBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentChatAdminBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentChatAdminBinding)bind(component, view, R.layout.fragment_chat_admin);
  }
}
