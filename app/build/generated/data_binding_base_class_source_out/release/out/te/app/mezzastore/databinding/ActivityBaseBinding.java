// Generated by data binding compiler. Do not edit!
package te.app.mezzastore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.mezzastore.R;
import te.app.mezzastore.base.BaseViewModel;

public abstract class ActivityBaseBinding extends ViewDataBinding {
  @NonNull
  public final FrameLayout flHomeContainer;

  @NonNull
  public final LinearLayout llBaseActionBarContainer;

  @NonNull
  public final ConstraintLayout llBaseContainer;

  @Bindable
  protected BaseViewModel mBaseViewModel;

  protected ActivityBaseBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FrameLayout flHomeContainer, LinearLayout llBaseActionBarContainer,
      ConstraintLayout llBaseContainer) {
    super(_bindingComponent, _root, _localFieldCount);
    this.flHomeContainer = flHomeContainer;
    this.llBaseActionBarContainer = llBaseActionBarContainer;
    this.llBaseContainer = llBaseContainer;
  }

  public abstract void setBaseViewModel(@Nullable BaseViewModel baseViewModel);

  @Nullable
  public BaseViewModel getBaseViewModel() {
    return mBaseViewModel;
  }

  @NonNull
  public static ActivityBaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_base, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityBaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityBaseBinding>inflateInternal(inflater, R.layout.activity_base, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityBaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_base, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityBaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityBaseBinding>inflateInternal(inflater, R.layout.activity_base, null, false, component);
  }

  public static ActivityBaseBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityBaseBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityBaseBinding)bind(component, view, R.layout.activity_base);
  }
}
